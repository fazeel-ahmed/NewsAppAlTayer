//
//  NewsDetailViewController.swift
//  NewsAppAlTayer
//
//  Created by Fazeel Ahmed on 7/10/20.
//  Copyright (c) 2020 Sun and Sand Sports LLC. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import SafariServices


protocol NewsDetailDisplayLogic: class
{
    //
}

class NewsDetailViewController: UIViewController, NewsDetailDisplayLogic
{
    var interactor: NewsDetailBusinessLogic?
    var router: (NSObjectProtocol & NewsDetailRoutingLogic & NewsDetailDataPassing)?
    
    var displayedArticle = News.Articles.ViewModel.DisplayedDocs()
    
    @IBOutlet weak var headlineLabel: UILabel!
    @IBOutlet weak var snippetLabel: UILabel!
    @IBOutlet weak var paragraphLabel: UILabel!
    @IBOutlet weak var newsImageView: UIImageView!
    @IBOutlet weak var dateLabel: UILabel!
    @IBOutlet weak var previousBarButton: UIBarButtonItem!
    @IBOutlet weak var nextBarButton: UIBarButtonItem!
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = NewsDetailInteractor()
        let presenter = NewsDetailPresenter()
        let router = NewsDetailRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        getArticle()
    }
    
    // MARK: Do something
    
    //@IBOutlet weak var nameTextField: UITextField!
    
    
    func getArticle () {
        if let article = interactor?.getArticle() {
            self.displayedArticle = article
            setUpUI(model: self.displayedArticle)
        }
    }
    
    
    //MARK:- IBActions
    @IBAction func actionReadCompleteArticle(_ sender: Any) {
        if let url = URL(string: self.displayedArticle.web_url ?? "") {
            let browser = SFSafariViewController(url: url)
            present(browser, animated: true, completion: nil)
        }
    }
    
    @IBAction func actionCloseButton(_ sender: Any) {
        self.dismiss(animated: true, completion: nil)
    }
    
    func setUpUI (model : News.Articles.ViewModel.DisplayedDocs) {
        headlineLabel.text = self.displayedArticle.headline?.main
        snippetLabel.text = self.displayedArticle.snippet
        paragraphLabel.text = self.displayedArticle.lead_paragraph
        dateLabel.text = self.displayedArticle.pub_date
       if let url = self.displayedArticle.multimedia?.first?.url {
            self.newsImageView.load(URL.init(string: "\(Environment().baseImageURL)\(url)"))
        } else {
            self.newsImageView.image = UIImage(named: "placeholder")
        }
    }
}
